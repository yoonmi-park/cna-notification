version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto8 # Amazon Corretto 8 - production-ready distribution of the OpenJDK
      docker: 18
    commands:
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.11/2020-07-08/bin/darwin/amd64/kubectl # Download kubectl 
      - chmod +x ./kubectl
      - mkdir ~/.kube
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name TeamE # Set cluster TeamE as default cluster
  pre_build:
    commands:
      - echo Region = $AWS_DEFAULT_REGION # Check Environment Variables
      - echo Account ID = $AWS_ACCOUNT_ID # Check Environment Variables
      - echo ECR Repo = $IMAGE_REPO_NAME # Check Environment Variables
      - echo Docker Image Tag = $IMAGE_TAG # Check Environment Variables
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) # Login ECR
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - mvn clean
      - mvn package -Dmaven.test.skip=true # Build maven
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG . # Build docker image
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG # Push docker image to ECR
      - echo Deploy service into EKS
      - kubectl apply -f ./kubernetes/deployment.yml # Deploy
      - kubectl apply -f ./kubernetes/service.yml # Service

cache:
  paths:
    - '/root/.m2/**/*'
